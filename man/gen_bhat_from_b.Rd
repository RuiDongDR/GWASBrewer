% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_bhat_from_b.R
\name{gen_bhat_from_b}
\alias{gen_bhat_from_b}
\title{Generate beta hats from standardized direct SNP effects and LD}
\usage{
gen_bhat_from_b(
  b_joint_std,
  b_joint,
  trait_corr,
  N,
  R_LD = NULL,
  snp_info = NULL,
  af = NULL,
  L_mat_joint_std = NULL,
  theta_joint_std = NULL
)
}
\arguments{
\item{b_joint_std}{Matrix of standardized joint (causal) effects (dimension variants by traits)}

\item{b_joint}{Matrix of non-standardized joint (causal) effects (dimension variants by traits). Supply only one of \code{b_joint} or
\code{b_joint_std}.}

\item{trait_corr}{Matrix of population trait correlation (traits by traits)}

\item{N}{Sample size, scalar, vector, or matrix. See \code{?sim_mv} for more details.}

\item{R_LD}{LD pattern (optional). See \code{?sim_mv} for more details.}

\item{snp_info}{(optional, required if \code{R_LD} is supplied).}

\item{af}{Allele frequencies (optional, allowed only if \code{R_LD} is missing). See \code{?sim_mv} for more details.}
}
\description{
Generate beta hats from standardized direct SNP effects and LD
}
\details{
This function can be used to generate new GWAS results with the same effect sizes by passing in the \code{beta_joint} table
from a data set simulated using `sim_mv`. If the
original data are generated with af missing and no LD then the \code{beta_joint} table contains standardized effects. Otherwise
it contains non-standardized effects. Use the appropriate argument, either \code{b_joint_std} or \code{b_joint}.
}
\examples{
# Use gen_bhat_from_b to generate new GWAS results with the same effect sizes.
N <- matrix(1000, nrow = 2, ncol =2)
G <- matrix(0, nrow = 2, ncol = 2)
R_E <- matrix(c(1, 0.8, 0.8, 1), nrow = 2, ncol = 2)
# original data
dat <- sim_mv(N = N, J = 20000, h2 = c(0.4, 0.3), pi = 1000/20000,
               G = G, R_E = R_E)
# data for second GWAS
# Since we didn't supply af or an LD pattern in the original GWAS,
# we have standardized effects.
dat_new <- gen_bhat_from_b(b_joint_std = dat$beta_joint, N = 40000,
                           trait_corr = dat$trait_corr)
}
